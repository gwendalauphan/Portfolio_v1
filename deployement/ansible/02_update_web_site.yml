---
- name: Mettre à jour le site web

  hosts: server_ovh
  become: yes
  gather_facts: yes
  remote_user: rocky

  vars:
    tmp_dir: "/tmp"
    project_name: "portfolio"
    build_dir: "{{ tmp_dir }}/{{ project_name }}"
    volumes_dir: "/var/lib/docker/volumes"

  tasks:
    - name: Print the variables created in the playbook
      debug:
        msg:
          - "tmp_dir: {{ tmp_dir }}"
          - "project_name: {{ project_name }}"
          - "build_dir: {{ build_dir }}"
          - "volumes_dir: {{ volumes_dir }}"

    - name: Créer le dossier nginx logs du conteneur webapp
      file:
        path: "{{ build_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: yes

    - name: Synchroniser les répertoires en parallèle
      synchronize:
        src: "{{ item.src }}"
        dest: "{{ build_dir }}/{{ item.dest }}"
        delete: yes
        recursive: "{{ item.recursive | default('yes') }}"
        rsync_opts:
          - "--exclude={{ item.exclude | default(omit) }}" # Utiliser la clé 'exclude' de chaque item, si elle existe
      become: yes
      poll: 0 # Ne pas attendre la fin de la tâche
      register: sync_jobs

      with_items:
        - { src: "../../docker/", dest: "docker/" }
        - { src: "../../swag/", dest: "swag/" }
        - { src: "../../webapp/", dest: "webapp/" }
        - {
            src: "../../../frontend/",
            dest: "frontend/",
            exclude: "node_modules",
          } # Exclure node_modules pour frontend

    - name: Créer les dossiers nécessaires pour les conteneurs
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      become: "{{ item.become | default('yes') }}"
      async: 600 # Durée maximale d'exécution en secondes
      poll: 0 # Exécution en arrière-plan
      with_items:
        - {
            path: "/home/rocky/swagconfig",
            owner: 111,
            group: 9999,
            mode: "0755",
          }
        - {
            path: "{{ volumes_dir }}/{{ project_name }}_nginx_logs/_data",
            owner: "root",
            group: "root",
            mode: "0755",
          }
        - {
            path: "{{ volumes_dir }}/{{ project_name }}_nginx_conf/_data",
            owner: "root",
            group: "root",
            mode: "0755",
          }
        - {
            path: "{{ volumes_dir }}/{{ project_name }}_build_volume/_data",
            owner: "root",
            group: "root",
            mode: "0755",
          }

    #Synchroniser le dossier de configuration du conteneur swag avec le serveur distant
    - name: Synchroniser le dossier de configuration du conteneur swag avec le serveur distant
      synchronize:
        src: "../../swag/swagconfig/"
        dest: "/home/rocky/swagconfig/"
      become: yes

    - name: Lancer le conteneur via Docker Compose
      command:
        cmd: "docker compose -f {{ build_dir }}/docker/docker-compose.yml -p {{ project_name }} up -d --build"
        chdir: "{{ build_dir }}/"
      become: yes
