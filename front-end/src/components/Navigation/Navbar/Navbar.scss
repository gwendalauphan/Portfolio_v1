@use "sass:math";

$borderRadius: 10px;
$spacer: 1rem;
$primary: #C4151C;
$text: #fff;
$linkHeight: $spacer * 3;
$timing: 250ms;
$transition: $timing ease all;
$linkWidth: 5rem;

$scale-1: 0.9;
$scale-2: 1.0;
$scale-3: 1.1;
$scale-4: 1.2;
$scale-5: 1.3;
$scale-6: 1.4;
$scale-7: 1.5;


$gap_unit: 3rem;
$height_unit: 4rem;
$height_unit_header: 4rem;

@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap');

.header {
  color: $text;
  padding: 0 $spacer * $scale-1;
  box-shadow: 0 0 40px rgba(0, 0, 0, 0.03);
  height: $height_unit_header * $scale-1;
  display: flex;
  align-items: center;
  gap: $gap_unit * $scale-1;

  @media (min-width: 480px) {
    padding: 0 $spacer * $scale-2;
    height: $height_unit_header * $scale-2;
    gap: $gap_unit * $scale-2;
  }
  
  @media (min-width: 640px) {
    padding: 0 $spacer * $scale-3;
    height: $height_unit_header * $scale-3;
    gap: $gap_unit * $scale-3;
  }

  @media (min-width: 800px) {
    padding: 0 $spacer * $scale-4;
    height: $height_unit_header * $scale-4;
    gap: $gap_unit * $scale-4;
  }

  @media (min-width: 960px) {
    padding: 0 $spacer * $scale-5;
    height: $height_unit_header * $scale-5;
    gap: $gap_unit * $scale-5;
  }

  @media (min-width: 1120px) {
    padding: 0 $spacer * $scale-6;
    height: $height_unit_header * $scale-6;
    gap: $gap_unit * $scale-6;
  }

  @media (min-width: 1280px) {
    padding: 0 $spacer * $scale-7;
    height: $height_unit_header * $scale-7;
    gap: $gap_unit * $scale-7;
  }
}

.navbar {
  display: flex;
  align-items: center;
  height: 100%;
  margin: 0 auto;
  overflow: hidden;

  &__menu {
    position: relative;
    display: flex;
  }

  &__link {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 0.6rem;
    align-items: center;
    justify-content: center;
    height: $linkHeight;
    width: $linkWidth;
    color: $text;
    transition: $transition;
    text-decoration: none;
    text-transform: uppercase;
    transition: 500ms ease all;
    svg{
        transition: 500ms ease all;
      }
      &:hover{
        svg{
          stroke: $primary;
        }
      }
      .navbar:not(:hover) &:focus,
      &:hover{
        span{
          opacity: 1;
          transform: translate(0);
        }
      }
    

    @media (min-width: 480px) {
      height: $linkHeight * $scale-2;
      width: $linkWidth * $scale-2;
    }
    
    @media (min-width: 640px) {
      height: $linkHeight * $scale-3;
      width: $linkWidth * $scale-3;
    }

    @media (min-width: 800px) {
        height: $linkHeight * $scale-4;
        width: $linkWidth * $scale-4;
    }

    @media (min-width: 960px) {
        height: $linkHeight * $scale-5;
        width: $linkWidth * $scale-5;
    }

    @media (min-width: 1120px) {
        height: $linkHeight * $scale-6;
        width: $linkWidth * $scale-6;
    }

    @media (min-width: 1280px) {
        height: $linkHeight * $scale-7;
        width: $linkWidth * $scale-7;
    }

    
    // ... et ainsi de suite pour d'autres points d'arrêt media query, jusqu'à $scale-7
  }

  &__item{
    &:last-child{
      &:before {
        content: '';
        position: absolute;
        left: -8rem;
        margin-left: math.div($linkWidth, 2);
        bottom: -0.75rem;
        height: 0.5rem;
        width: 2px;
        background: $primary;
        $speedlineColor: rgba(#fff,0.2);
        $speedGap: 3rem;
        $shadow : 0 -0.5rem $primary,0 -0.5rem $primary, 0 0 $speedGap 0.5rem $primary,2rem 0 0 $speedlineColor, -$speedGap 0 0 $speedlineColor;
        @for $i from 2 to 120{
          $shadow: $shadow + #{","}+ $i*$speedGap 0 0 $speedlineColor;
          $shadow: $shadow + #{","}+ $i*-$speedGap 0 0 $speedlineColor;
        }
        box-shadow: $shadow;
        transition: 750ms ease all;
      }
    }
    
    @for $i from 1 to 12 {
      &:first-child:nth-last-child(#{$i}),
      &:first-child:nth-last-child(#{$i}) ~ li {
        @for $j from 1 to $i {
          &:nth-child(#{$j}):hover {
            ~ li:last-child:before {
              left: math.div(100%, $i) * ($j - 0.8);
            }
          }
        }
        &:last-child:hover:before {
          left: math.div(100%, $i) * ($i - 0.65);
        }
      }
    }
    
  }
}
